{"ast":null,"code":"import _defineProperty from \"/Users/kyle/Documents/App Projects/Templates/Web/Dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/kyle/Documents/App Projects/Templates/Web/Dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kyle/Documents/App Projects/Templates/Web/Dashboard/src/components/Sidebar/MenuItems.js\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport IconExpandMore from \"@material-ui/icons/ExpandMore\";\nimport IconExpandLess from \"@material-ui/icons/ExpandLess\";\nimport MenuComponent from \"./MenuComponent\";\n\nvar MenuItem = function MenuItem(props) {\n  var layout = props.layout,\n      path = props.path,\n      name = props.name,\n      Icon = props.Icon,\n      items = props.items,\n      classes = props.classes,\n      isActive = props.isActive,\n      color = props.color;\n  var isExpandable = items && items.length > 0;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  function handleClick() {\n    setOpen(!open);\n  }\n\n  var whiteFontClasses = classNames(_defineProperty({}, \" \" + classes.whiteFont, isActive));\n  var RootItem = React.createElement(MenuComponent, {\n    disablePadding: true,\n    classes: classes,\n    color: color,\n    onClick: handleClick,\n    link: !items ? layout + path : null,\n    isActive: isActive,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, !!Icon && React.createElement(Icon, {\n    className: classNames(classes.itemIcon, whiteFontClasses, _defineProperty({}, classes.itemIconRTL, props.rtlActive)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(ListItemText, {\n    inset: !Icon,\n    primary: name,\n    className: classNames(classes.itemText, whiteFontClasses, _defineProperty({}, classes.itemTextRTL, props.rtlActive)),\n    disableTypography: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), isExpandable && !open && React.createElement(IconExpandMore, {\n    className: classNames(whiteFontClasses),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), isExpandable && open && React.createElement(IconExpandLess, {\n    className: classNames(whiteFontClasses),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }));\n  var ItemChildren = isExpandable ? React.createElement(Collapse, {\n    in: open,\n    timeout: \"auto\",\n    unmountOnExit: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Divider, {\n    color: 'white',\n    variant: 'fullWidth',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(List, {\n    component: \"div\",\n    disablePadding: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, items.map(function (item, index) {\n    return React.createElement(MenuItem, Object.assign({\n      color: color,\n      classes: classes\n    }, item, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }));\n  }))) : null;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, RootItem, ItemChildren);\n};\n\nexport default MenuItem;","map":{"version":3,"sources":["/Users/kyle/Documents/App Projects/Templates/Web/Dashboard/src/components/Sidebar/MenuItems.js"],"names":["React","classNames","ListItem","ListItemIcon","ListItemText","Collapse","Divider","List","IconExpandMore","IconExpandLess","MenuComponent","MenuItem","props","layout","path","name","Icon","items","classes","isActive","color","isExpandable","length","useState","open","setOpen","handleClick","whiteFontClasses","whiteFont","RootItem","itemIcon","itemIconRTL","rtlActive","itemText","itemTextRTL","ItemChildren","map","item","index"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAGA,IAAMC,QAAQ,GAAC,SAATA,QAAS,CAACC,KAAD,EAAS;AAAA,MAEbC,MAFa,GAE2CD,KAF3C,CAEbC,MAFa;AAAA,MAENC,IAFM,GAE2CF,KAF3C,CAENE,IAFM;AAAA,MAEDC,IAFC,GAE2CH,KAF3C,CAEDG,IAFC;AAAA,MAEKC,IAFL,GAE2CJ,KAF3C,CAEKI,IAFL;AAAA,MAEWC,KAFX,GAE2CL,KAF3C,CAEWK,KAFX;AAAA,MAEkBC,OAFlB,GAE2CN,KAF3C,CAEkBM,OAFlB;AAAA,MAE2BC,QAF3B,GAE2CP,KAF3C,CAE2BO,QAF3B;AAAA,MAEoCC,KAFpC,GAE2CR,KAF3C,CAEoCQ,KAFpC;AAIpB,MAAMC,YAAY,GAAGJ,KAAK,IAAIA,KAAK,CAACK,MAAN,GAAa,CAA3C;;AAJoB,wBAKItB,KAAK,CAACuB,QAAN,CAAe,KAAf,CALJ;AAAA;AAAA,MAKbC,IALa;AAAA,MAKPC,OALO;;AAOpB,WAASC,WAAT,GAAuB;AACnBD,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACH;;AAED,MAAMG,gBAAgB,GAAG1B,UAAU,qBAC9B,MAAMiB,OAAO,CAACU,SADgB,EACJT,QADI,EAAnC;AAIA,MAAMU,QAAQ,GACV,oBAAC,aAAD;AAAe,IAAA,cAAc,MAA7B;AAA8B,IAAA,OAAO,EAAEX,OAAvC;AAAgD,IAAA,KAAK,EAAEE,KAAvD;AAA8D,IAAA,OAAO,EAAEM,WAAvE;AAAoF,IAAA,IAAI,EAAE,CAACT,KAAD,GAAOJ,MAAM,GAACC,IAAd,GAAmB,IAA7G;AAAmH,IAAA,QAAQ,EAAEK,QAA7H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAAC,CAACH,IAAF,IACG,oBAAC,IAAD;AACI,IAAA,SAAS,EAAEf,UAAU,CAACiB,OAAO,CAACY,QAAT,EAAmBH,gBAAnB,sBAChBT,OAAO,CAACa,WADQ,EACMnB,KAAK,CAACoB,SADZ,EADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR,EAQI,oBAAC,YAAD;AACI,IAAA,KAAK,EAAE,CAAChB,IADZ;AAEI,IAAA,OAAO,EAAED,IAFb;AAGI,IAAA,SAAS,EAAEd,UAAU,CAACiB,OAAO,CAACe,QAAT,EAAmBN,gBAAnB,sBAChBT,OAAO,CAACgB,WADQ,EACMtB,KAAK,CAACoB,SADZ,EAHzB;AAMI,IAAA,iBAAiB,EAAE,IANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,EAiBKX,YAAY,IAAI,CAACG,IAAjB,IAAyB,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAEvB,UAAU,CAAC0B,gBAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjB9B,EAkBKN,YAAY,IAAIG,IAAhB,IAAwB,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAEvB,UAAU,CAAC0B,gBAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlB7B,CADJ;AAsBA,MAAMQ,YAAY,GAAGd,YAAY,GAC7B,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAEG,IAAd;AAAoB,IAAA,OAAO,EAAC,MAA5B;AAAmC,IAAA,aAAa,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAE,OAAhB;AAAyB,IAAA,OAAO,EAAE,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,KAAhB;AAAsB,IAAA,cAAc,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,KAAK,CAACmB,GAAN,CAAU,UAACC,IAAD,EAAOC,KAAP;AAAA,WACP,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAElB,KAAjB;AAAyB,MAAA,OAAO,EAAEF;AAAlC,OAA+CmB,IAA/C;AAAqD,MAAA,GAAG,EAAEC,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADO;AAAA,GAAV,CADL,CAFJ,CAD6B,GAS7B,IATJ;AAWA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,QADL,EAEKM,YAFL,CADJ;AAOH,CAvDD;;AAyDA,eAAexB,QAAf","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport IconExpandMore from \"@material-ui/icons/ExpandMore\";\nimport IconExpandLess from \"@material-ui/icons/ExpandLess\";\nimport MenuComponent from \"./MenuComponent\";\n\n\nconst MenuItem=(props)=>{\n\n    const {layout,path,name, Icon ,items, classes, isActive,color}=props;\n\n    const isExpandable = items && items.length>0;\n    const [open, setOpen] = React.useState(false)\n\n    function handleClick() {\n        setOpen(!open)\n    }\n\n    const whiteFontClasses = classNames({\n        [\" \" + classes.whiteFont]: isActive\n    });\n\n    const RootItem=(\n        <MenuComponent disablePadding classes={classes} color={color} onClick={handleClick} link={!items?layout+path:null} isActive={isActive}>\n            {!!Icon&&(\n                <Icon\n                    className={classNames(classes.itemIcon, whiteFontClasses, {\n                        [classes.itemIconRTL]: props.rtlActive\n                    })}\n                />\n            )}\n            <ListItemText\n                inset={!Icon}\n                primary={name}\n                className={classNames(classes.itemText, whiteFontClasses, {\n                    [classes.itemTextRTL]: props.rtlActive\n                })}\n                disableTypography={true}\n            />\n            {/* Display the expand menu if the item has children */}\n            {isExpandable && !open && <IconExpandMore className={classNames(whiteFontClasses)} />}\n            {isExpandable && open && <IconExpandLess className={classNames(whiteFontClasses,)} />}\n        </MenuComponent>)\n\n    const ItemChildren = isExpandable ? (\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Divider color={'white'} variant={'fullWidth'} />\n            <List component=\"div\" disablePadding>\n                {items.map((item, index) => (\n                    <MenuItem color={color}  classes={classes} {...item} key={index} />\n                ))}\n            </List>\n        </Collapse>\n    ) : null\n\n    return (\n        <div>\n            {RootItem}\n            {ItemChildren}\n        </div>\n    )\n\n}\n\nexport default MenuItem;"]},"metadata":{},"sourceType":"module"}