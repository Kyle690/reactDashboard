{"ast":null,"code":"import _defineProperty from \"/Users/kyle/Documents/App Projects/Templates/Web/Dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/kyle/Documents/App Projects/Templates/Web/Dashboard/src/components/Sidebar/Sidebar.js\";\n\n/*eslint-disable*/\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Icon from \"@material-ui/core/Icon\"; // core components\n\nimport AdminNavbarLinks from \"../Navbars/AdminNavbarLinks.js\";\nimport RTLNavbarLinks from \"../Navbars/RTLNavbarLinks.js\";\nimport MenuItem from \"./MenuItems\";\nimport styles from \"../../assets/jss/material-dashboard-react/components/sidebarStyle.js\";\nvar useStyles = makeStyles(styles);\nexport default function Sidebar(props) {\n  var classes = useStyles(); // verifies if routeName is the one active (in browser input)\n\n  function activeRoute(routeName) {\n    return window.location.href.indexOf(routeName) > -1 ? true : false;\n  }\n\n  var color = props.color,\n      logo = props.logo,\n      image = props.image,\n      logoText = props.logoText,\n      routes = props.routes;\n  var links = React.createElement(List, {\n    className: classes.list,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, routes.map(function (prop, key) {\n    return React.createElement(MenuItem, Object.assign({}, prop, {\n      color: color,\n      isActive: activeRoute(prop.layout + prop.path),\n      classes: classes,\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }));\n  }));\n  var brand = React.createElement(\"div\", {\n    className: classes.logo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"https://www.creative-tim.com?ref=mdr-sidebar\",\n    className: classNames(classes.logoLink, _defineProperty({}, classes.logoLinkRTL, props.rtlActive)),\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.logoImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: logo,\n    alt: \"logo\",\n    className: classes.img,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), logoText));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Hidden, {\n    mdUp: true,\n    implementation: \"css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Drawer, {\n    variant: \"temporary\",\n    anchor: props.rtlActive ? \"left\" : \"right\",\n    open: props.open,\n    classes: {\n      paper: classNames(classes.drawerPaper, _defineProperty({}, classes.drawerPaperRTL, props.rtlActive))\n    },\n    onClose: props.handleDrawerToggle,\n    ModalProps: {\n      keepMounted: true // Better open performance on mobile.\n\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, brand, React.createElement(\"div\", {\n    className: classes.sidebarWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(AdminNavbarLinks, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), links), image !== undefined ? React.createElement(\"div\", {\n    className: classes.background,\n    style: {\n      backgroundImage: \"url(\" + image + \")\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }) : null)), React.createElement(Hidden, {\n    smDown: true,\n    implementation: \"css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Drawer, {\n    anchor: props.rtlActive ? \"right\" : \"left\",\n    variant: \"permanent\",\n    open: true,\n    classes: {\n      paper: classNames(classes.drawerPaper, _defineProperty({}, classes.drawerPaperRTL, props.rtlActive))\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, brand, React.createElement(\"div\", {\n    className: classes.sidebarWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, links), image !== undefined ? React.createElement(\"div\", {\n    className: classes.background,\n    style: {\n      backgroundImage: \"url(\" + image + \")\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }) : null)));\n}\nSidebar.propTypes = {\n  rtlActive: PropTypes.bool,\n  handleDrawerToggle: PropTypes.func,\n  bgColor: PropTypes.oneOf([\"purple\", \"blue\", \"green\", \"orange\", \"red\"]),\n  logo: PropTypes.string,\n  image: PropTypes.string,\n  logoText: PropTypes.string,\n  routes: PropTypes.arrayOf(PropTypes.object),\n  open: PropTypes.bool\n};","map":{"version":3,"sources":["/Users/kyle/Documents/App Projects/Templates/Web/Dashboard/src/components/Sidebar/Sidebar.js"],"names":["React","classNames","PropTypes","NavLink","makeStyles","Drawer","Hidden","List","ListItem","ListItemText","Icon","AdminNavbarLinks","RTLNavbarLinks","MenuItem","styles","useStyles","Sidebar","props","classes","activeRoute","routeName","window","location","href","indexOf","color","logo","image","logoText","routes","links","list","map","prop","key","layout","path","brand","logoLink","logoLinkRTL","rtlActive","logoImage","img","open","paper","drawerPaper","drawerPaperRTL","handleDrawerToggle","keepMounted","sidebarWrapper","undefined","background","backgroundImage","propTypes","bool","func","bgColor","oneOf","string","arrayOf","object"],"mappings":"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","sourcesContent":["/*eslint-disable*/\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Icon from \"@material-ui/core/Icon\";\n// core components\nimport AdminNavbarLinks from \"../Navbars/AdminNavbarLinks.js\";\nimport RTLNavbarLinks from \"../Navbars/RTLNavbarLinks.js\";\nimport MenuItem from \"./MenuItems\";\nimport styles from \"../../assets/jss/material-dashboard-react/components/sidebarStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\n\nexport default function Sidebar(props) {\n  const classes = useStyles();\n  // verifies if routeName is the one active (in browser input)\n  function activeRoute(routeName) {\n    return window.location.href.indexOf(routeName) > -1 ? true : false;\n  }\n  const { color, logo, image, logoText, routes } = props;\n  var links = (\n    <List className={classes.list}>\n      {routes.map((prop, key) => {\n          return (\n              <MenuItem\n                  {...prop}\n                  color={color}\n                  isActive={activeRoute(prop.layout+prop.path)}\n                  classes={classes}\n                  key={key}\n              />\n              )})}\n    </List>\n  );\n  var brand = (\n    <div className={classes.logo}>\n      <a\n        href=\"https://www.creative-tim.com?ref=mdr-sidebar\"\n        className={classNames(classes.logoLink, {\n          [classes.logoLinkRTL]: props.rtlActive\n        })}\n        target=\"_blank\"\n      >\n        <div className={classes.logoImage}>\n          <img src={logo} alt=\"logo\" className={classes.img} />\n        </div>\n        {logoText}\n      </a>\n    </div>\n  );\n  return (\n    <div>\n      <Hidden mdUp implementation=\"css\">\n        <Drawer\n          variant=\"temporary\"\n          anchor={props.rtlActive ? \"left\" : \"right\"}\n          open={props.open}\n          classes={{\n            paper: classNames(classes.drawerPaper, {\n              [classes.drawerPaperRTL]: props.rtlActive\n            })\n          }}\n          onClose={props.handleDrawerToggle}\n          ModalProps={{\n            keepMounted: true // Better open performance on mobile.\n          }}\n        >\n          {brand}\n          <div className={classes.sidebarWrapper}>\n            <AdminNavbarLinks />\n            {links}\n          </div>\n          {image !== undefined ? (\n            <div\n              className={classes.background}\n              style={{ backgroundImage: \"url(\" + image + \")\" }}\n            />\n          ) : null}\n        </Drawer>\n      </Hidden>\n      <Hidden smDown implementation=\"css\">\n        <Drawer\n          anchor={props.rtlActive ? \"right\" : \"left\"}\n          variant=\"permanent\"\n          open\n          classes={{\n            paper: classNames(classes.drawerPaper, {\n              [classes.drawerPaperRTL]: props.rtlActive\n            })\n          }}\n        >\n          {brand}\n          <div className={classes.sidebarWrapper}>{links}</div>\n          {image !== undefined ? (\n            <div\n              className={classes.background}\n              style={{ backgroundImage: \"url(\" + image + \")\" }}\n            />\n          ) : null}\n        </Drawer>\n      </Hidden>\n    </div>\n  );\n}\n\nSidebar.propTypes = {\n  rtlActive: PropTypes.bool,\n  handleDrawerToggle: PropTypes.func,\n  bgColor: PropTypes.oneOf([\"purple\", \"blue\", \"green\", \"orange\", \"red\"]),\n  logo: PropTypes.string,\n  image: PropTypes.string,\n  logoText: PropTypes.string,\n  routes: PropTypes.arrayOf(PropTypes.object),\n  open: PropTypes.bool\n};\n"]},"metadata":{},"sourceType":"module"}